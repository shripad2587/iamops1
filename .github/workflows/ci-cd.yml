name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main  # Trigger when code is pushed to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or other registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME1 }}
          password: ${{ secrets.DOCKER_PASSWORD1 }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME1 }}/my-backend:$GITHUB_SHA .

      # Step 5: Push the Docker image to the registry
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME1 }}/my-backend:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Deploy job runs after the build job

    steps:
      # Step 1: Checkout code (same as build job)
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (again, needed for deployment)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or other registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME1 }}
          password: ${{ secrets.DOCKER_PASSWORD1 }}
      
      - name: Set up SSH key
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" | base64 -d > /tmp/aws_key.pem
          chmod 600 /tmp/aws_key.pem
          export SSH_PRIVATE_KEY=/tmp/aws_key.pem
        env:
          AWS_SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}

    # Step 4: Pull and run the Docker image on your server (use SSH or other deployment method)
      - name: Deploy Docker container
        run: |
          ssh -i /tmp/aws_key.pem ec2-user@13.203.105.17 <<EOF
            docker pull ${{ secrets.DOCKER_USERNAME1 }}/my-backend:$GITHUB_SHA
            docker stop my-backend-container || true
            docker rm my-backend-container || true
            docker run -d --name my-backend-container -p 5000:5000 ${{ secrets.DOCKER_USERNAME1 }}/my-backend:$GITHUB_SHA
          EOF


      
     
