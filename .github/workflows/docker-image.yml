name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # You can specify other versions as needed

    # Step 3: Install dependencies (if using pip)
    - name: Install dependencies
      run: |
        cd ../backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Assumes you have a requirements.txt file


    steps:
    - uses: actions/checkout@v4
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME1}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD1}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Build the Docker image
      run: docker build -t iamops1 .
    - name: Push to Dashboard
      run: docker push shripad2587/iamops1:tagname


# name: Build and Push Docker image to Amazon ECR

# on:
#   push:
#     branches:
#       - main  # Trigger the workflow when there is a push to the main branch

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     # Step 1: Checkout the code from GitHub repository
#     - name: Checkout code
#       uses: actions/checkout@v3

#     # Step 2: Set up Docker Buildx
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     # Step 3: Log in to Amazon ECR
#     - name: Log in to Amazon ECR
#       uses: aws-actions/amazon-ecr-login@v1

#     # Step 4: Build the Docker image
#     - name: Build Docker image
#       run: |
#         docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest .

#     # Step 5: Tag the Docker image for ECR
#     - name: Tag Docker image
#       run: |
#         docker tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

#     # Step 6: Push the Docker image to ECR
#     - name: Push Docker image to ECR
#       run: |
#         docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
#         docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}


# name: Docker Build and Push to ECR

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
      
#       - name: Log in to Amazon ECR
#         uses: aws-actions/amazon-ecr-login@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-south-1  # Make sure to pass the region explicitly here as well



      # # - name: Set up AWS credentials
      # #   uses: aws-actions/configure-aws-credentials@v1
      # #   with:
      # #     aws-access-key-id: ${{ secrets.DOCKER_USERNAME }}
      # #     aws-secret-access-key: ${{ secrets.DOCKER_PASSWORD}}
      # #     aws-region: ap-south-1  # Specify the region where your ECR repository is located



      # - name: Build Docker image
      #   run: |
      #     docker build -t my-app .
        
      # - name: Tag Docker image
      #   run: |
      #     docker tag my-app:latest 873548405156.dkr.ecr.ap-south-1.amazonaws.com/my-repository:latest

      # - name: Push Docker image to ECR
      #   run: |
      #     docker push 873548405156.dkr.ecr.ap-south-1.amazonaws.com/my-repository:latest
